// Generated by CoffeeScript 1.6.3
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['jquery', 'underscore', 'backbone', 'views/taskview', 'text!templates/tasks.html'], function($, _, Backbone, TaskView, tasksTemplate) {
    var TasksView, _ref;
    TasksView = (function(_super) {
      __extends(TasksView, _super);

      function TasksView() {
        this.render = __bind(this.render, this);
        _ref = TasksView.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      TasksView.prototype.initialize = function() {
        this.render();
        this.model.bind('change:workTime', this.render);
        this.model.bind('change:isBreak', this.render);
        return this.model.tasks.bind('add', this.render);
      };

      TasksView.prototype.template = _.template(tasksTemplate);

      TasksView.prototype.render = function() {
        var _this = this;
        this.$el.html(this.template(this.model.toJSON()));
        return this.model.tasks.each(function(task) {
          var view;
          view = new TaskView({
            model: task
          });
          return _this.$el.find("#timeline").append(view.render().el);
        });
      };

      return TasksView;

    })(Backbone.View);
    return TasksView;
  });

}).call(this);
